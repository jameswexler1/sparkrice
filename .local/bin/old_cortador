#!/bin/bash

# Select the video/image file with dmenu from home directory (non-recursive)
VIDEO=$(find ~/ -maxdepth 1 -type f \( -iname '*.mp4' -o -iname '*.mkv' -o -iname '*.avi' -o -iname '*.webp' \) 2>/dev/null | dmenu -i -p "Select video/image to cut:")

if [ -z "$VIDEO" ]; then
  echo "No file selected."
  exit 1
fi

# Ask for start time (e.g., 00:01:55.5)
START=$(echo "" | dmenu -p "Start time (hh:mm:ss or seconds):")

if [ -z "$START" ]; then
  echo "No start time entered."
  exit 1
fi

# Ask for end time (e.g., 00:02:01 or seconds)
END=$(echo "" | dmenu -p "End time (hh:mm:ss or seconds):")

if [ -z "$END" ]; then
  echo "No end time entered."
  exit 1
fi

# Convert start and end times to seconds (for duration calculation)
to_seconds() {
  if [[ $1 =~ ^[0-9]+:[0-9]{2}:[0-9]{2}(\.[0-9]+)?$ ]]; then
    IFS=: read -r h m s <<< "$1"
    echo "$(echo "$h*3600 + $m*60 + $s" | bc -l)"
  elif [[ $1 =~ ^[0-9]+:[0-9]{2}(\.[0-9]+)?$ ]]; then
    IFS=: read -r m s <<< "$1"
    echo "$(echo "$m*60 + $s" | bc -l)"
  else
    echo "$1"
  fi
}

start_sec=$(to_seconds "$START")
end_sec=$(to_seconds "$END")

duration=$(echo "$end_sec - $start_sec" | bc -l)

if (( $(echo "$duration <= 0" | bc -l) )); then
  echo "End time must be greater than start time."
  exit 1
fi

# Generate output filename
EXT="${VIDEO##*.}"
BASE="${VIDEO%.*}"
OUTPUT="${BASE}_cut_${START//:/-}_to_${END//:/-}.$EXT"

# Run ffmpeg (copy codec for fast cutting)
ffmpeg -ss "$START" -i "$VIDEO" -t "$duration" -c copy "$OUTPUT"
