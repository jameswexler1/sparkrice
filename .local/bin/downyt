

#!/bin/bash
# yt-dl-dmenu.sh: Download YouTube/Instagram/etc. with clipboard integration and status notifications
# Features:
# - Detects playlist URLs and notifies user
# - Cleans URLs to download only the intended video
# - Audio downloads in opus
# - Video downloads in MP4 (best quality)
# - Clipboard + dmenu input
# - Notifications

OUTPUT_DIR="/home/gustavo/Downloads"

# Ask user to choose download type
download_type=$(printf "Audio\nVideo" | dmenu -p "Choose download type:")
[ -z "$download_type" ] && notify-send "yt-dl" "No download type selected. Exiting." && exit 1

# Fetch clipboard content and use as dmenu default input
clipboard_content=$(xclip -o -selection clipboard 2>/dev/null)
url=$(echo "$clipboard_content" | dmenu -p "Enter URL:")

# Check if URL is a playlist (look for list= parameter)
if echo "$url" | grep -q "[?&]list="; then
    notify-send "yt-dl" "Playlist detected. Cleaning URL to download only the single video."
fi

# Clean URL to remove playlist parameters (list, index)
clean_url=$(echo "$url" | sed -E 's/[?&]list=[^&]+//g; s/[?&]index=[^&]+//g')

# Validate URL
if ! echo "$clean_url" | grep -qE "^https?://"; then
    notify-send "yt-dl" "That doesn't look like a valid URL. Exiting."
    exit 1
fi

# Check if yt-dlp finds any downloadable media
test_filename=$(yt-dlp --no-playlist --get-filename -o "%(title)s.%(ext)s" "$clean_url" 2>/dev/null | head -n1)
if [ -z "$test_filename" ]; then
    notify-send "yt-dl" "No downloadable media found. Try opening the direct video page."
    exit 1
fi

# Notify that the download has started
notify-send "yt-dl" "Download started..."

# Download process
if [ "$download_type" = "Audio" ]; then
    yt-dlp --no-playlist -x --audio-format opus --audio-quality 0 -o "${OUTPUT_DIR}/%(title)s.%(ext)s" "$clean_url"
else
    # Video: best MP4 video + best M4A audio, fallback to single MP4, merge to MP4
    yt-dlp --no-playlist -f "bestvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]" --merge-output-format mp4 -o "${OUTPUT_DIR}/%(title)s.%(ext)s" "$clean_url"
fi

# Notify success or failure
if [ $? -eq 0 ]; then
    notify-send "yt-dl" "Download finished: $test_filename"
    paplay $HOME/.local/share/notification_sounds/peeee.wav
else
    notify-send "yt-dl" "Download failed. Check terminal output for errors."
    paplay output.wav
fi
