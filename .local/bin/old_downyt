#!/bin/bash
# yt-dl-dmenu.sh: Download YouTube/Instagram/etc. with clipboard integration and status notifications

OUTPUT_DIR="/home/gustavo/Downloads"

# Ask user to choose download type
download_type=$(printf "Audio\nVideo" | dmenu -p "Choose download type:")
[ -z "$download_type" ] && notify-send "yt-dl" "No download type selected. Exiting." && exit 1

# Fetch clipboard content and use as dmenu default input
clipboard_content=$(xclip -o -selection clipboard 2>/dev/null)
url=$(echo "$clipboard_content" | dmenu -p "Enter URL:")

# Validate URL
if ! echo "$url" | grep -qE "^https?://"; then
    notify-send "yt-dl" "That doesn't look like a valid URL. Go copy it. Exiting."
    exit 1
fi

# Check if yt-dlp finds anything to download
test_filename=$(yt-dlp --get-filename -o "%(title)s.%(ext)s" "$url" 2>/dev/null | head -n1)
if [ -z "$test_filename" ]; then
    notify-send "yt-dl" "No downloadable media found. Try opening the direct video page instead of a playlist/article."
    exit 1
fi

# Notify that the download has started
notify-send "yt-dl" "Download started..."

# Download process
if [ "$download_type" = "Audio" ]; then
    yt-dlp -x --audio-format opus --audio-quality 0 -o "${OUTPUT_DIR}/%(title)s.%(ext)s" "$url"
else
    yt-dlp -o "${OUTPUT_DIR}/%(title)s.%(ext)s" "$url"
fi

# Notify success or failure
if [ $? -eq 0 ]; then
    notify-send "yt-dl" "Download finished: $test_filename"
else
    notify-send "yt-dl" "Download failed. Check terminal output for errors."
fi
